[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "{{cookiecutter.project_slug}}"
version = "0.1.0"
description = "{{cookiecutter.description}}"
authors = [
    {name = "{{cookiecutter.author_name}}", email = "{{cookiecutter.author_email}}"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">={{cookiecutter.python_version}}"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: {{cookiecutter.python_version}}",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "mcp>=1.0.0",
    "mcp[cli]>=1.0.0",
    "anyio>=4.5",
    "starlette>=0.36.0",
    "uvicorn>=0.27.0",
    "click>=8.0.0",
    "platformdirs>=3.0.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0.0",
    "python-multipart>=0.0.6"{% if cookiecutter.include_admin_ui == "yes" %},
    "streamlit>=1.28.0",
    "plotly>=5.0.0",
    "pandas>=2.0.0"{% endif %}
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.scripts]
{{ cookiecutter.project_slug }}-server = "{{ cookiecutter.project_slug }}.server.app:main"

[project.urls]
Homepage = "https://github.com/{{cookiecutter.author_name}}/{{cookiecutter.project_slug}}"
Documentation = "https://github.com/{{cookiecutter.author_name}}/{{cookiecutter.project_slug}}/blob/main/README.md"
Repository = "https://github.com/{{cookiecutter.author_name}}/{{cookiecutter.project_slug}}"
Issues = "https://github.com/{{cookiecutter.author_name}}/{{cookiecutter.project_slug}}/issues"

[tool.setuptools]
packages = ["{{cookiecutter.project_slug}}"]

[tool.black]
line-length = 88
target-version = ['py{{cookiecutter.python_version.replace(".", "")}}']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "{{cookiecutter.python_version}}"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov={{cookiecutter.project_slug}} --cov-report=html --cov-report=term-missing"
asyncio_mode = "auto"